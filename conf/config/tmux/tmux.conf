# ___ UNBIND ___________________________________________
unbind C-b
unbind C-u
unbind C-d
unbind k
unbind f
unbind i
unbind -n Tab
unbind '"'
unbind %
unbind [
unbind ]

# options
set-option -g mouse on
set-window-option -g mode-keys vi
set -g default-terminal "alacritty"
set-option -g status-bg colour234
set-option -g status-fg colour0
set -g window-status-format  ' #W '
set -g window-status-style 'fg=colour245'
set -g window-status-current-format  ' (#W) '
set -g window-status-current-style 'bg=colour16,fg=colour15,bold'
set -g status-left ''
set -g status-right '#[bg=#4e4e4e]#[fg=#ffffff]'
set -g mode-style 'bg=colour197,fg=colour16'

# [C-t] is hotkey
set -g prefix C-t

# [C-t c] clear screen
bind-key c send-keys 'C-l'

# [C-t n] new window
bind-key n new-window -c "#{pane_current_path}" -n ""

# [C-x x] close pane
bind-key x kill-pane

# [C-t o] next window
bind-key o next-window

# [C-t y] previous-window
bind-key y previous-window

# [C-t s] split window (vertical)
bind-key s split-window -h -c "#{pane_current_path}"

# [C-t h] split window (horizontal)
bind-key h split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim,view, and weechat splits.
is_special="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|weechat)(diff)?$'"
# [C-y] focus left
bind-key -n 'C-y' if-shell "$is_special" 'send-keys C-y'  'select-pane -L'
# [C-n] focus down
bind-key -n 'C-n' if-shell "$is_special" 'send-keys C-n'  'select-pane -D'
# [C-e] focus up
bind-key -n 'C-e' if-shell "$is_special" 'send-keys C-e'  'select-pane -U'
# [C-r] focus up
bind-key -n 'C-o' if-shell "$is_special" 'send-keys C-o'  'select-pane -R'

# [C-t f] full screen current pane
bind-key f break-pane -t :

# [C-t g] current pane goto seleced window
bind-key g choose-window 'join-pane -v -t "%%"'

# [C-t r] rotate window
bind-key r rotate-window

# [C-t d] swap pane down
bind-key d swap-pane -D

# [C-t u] swap pane up
bind-key u swap-pane -U

# [C-t R] rename pane
bind-key R command-prompt "rename-window '%%'"

# [C-t Y] resize grow left
bind-key Y resize-pane -L 15
# [C-t N] resize grow down
bind-key N resize-pane -D 15
# [C-t E] resize grow up
bind-key E resize-pane -U 15
# [C-t O] resize grow right
bind-key O resize-pane -R 15

# [C-t p] paste
bind-key p paste-buffer                # paste; default ]

# [C-t k] kopy mode
bind-key k copy-mode                   # enter copy mode; default [

# [C-t v] visual mode
bind-key v copy-mode                   # enter copy mode; default [

# bind-key -T copy-mode-vi 'C-y' send-keys -X page-down
# bind-key -T copy-mode-vi 'C-n' send-keys -X halfpage-down
# bind-key -T copy-mode-vi 'C-e' send-keys -X halfpage-up
# bind-key -T copy-mode-vi 'C-o' send-keys -X page-up
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi k send-keys -X copy-selection
bind-key -T copy-mode-vi y send-keys -X cursor-left
bind-key -T copy-mode-vi n send-keys -X cursor-down
bind-key -T copy-mode-vi e send-keys -X cursor-up
bind-key -T copy-mode-vi o send-keys -X cursor-right
bind-key -T copy-mode-vi f send-keys -X search-again
bind-key -T copy-mode-vi F send-keys -X search-reverse
bind-key -T copy-mode-vi Y send-keys -X start-of-line
bind-key -T copy-mode-vi N send-keys -X halfpage-down
bind-key -T copy-mode-vi E send-keys -X halfpage-up
bind-key -T copy-mode-vi O send-keys -X end-of-line
bind-key -T copy-mode-vi w send-keys -X next-word
bind-key -T copy-mode-vi W send-keys -X previous-word
# bind-key -T copy-mode-vi l send-keys -X other-end
bind-key -T choice-mode n send-keys -X down
bind-key -T choice-mode e send-keys -X up

# ___ DISPLAY ______________________________________
# WORKMAN

# run '~/.tmux/plugins/tpm/tpm'
# ___ SET SHELL ______________________________________
# :set-option -g default-shell /home/slugbyte/workspace/root/lang/rust/cargo/bin/nu
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# ___ MISC _____________________________________________
# bind r to reload source file
# bind r \
# 	source-file ~/.tmux.conf \;\
# 	display 'reloaded tmux.conf'
# bind prefix ctrl-o to clear screen
# bind p clear
# bind -n C-p send-keys 'C-l'
# bind-key -n C-l next-window
# bind-key -n C-k previous-window
# # swap windows
# bind-key -r "<" swap-window -d -t -1
# bind-key -r ">" swap-window -d -t +1
# # bind <C-f> m turn mouse mode on 
# bind m \
# 	set-option -gq mouse on \;\
# 	display 'Mouse: ON'
#
# # bind <C-f> M turn mouse mode off
# bind M \
# 	set-option -gq mouse off \;\
# 	display 'Mouse: OFF'
# bind-key -n 'C-h' if-shell "$is_special" 'send-keys C-w C-S' 'split-window -v -c "#{pane_current_path}"'
# bind-key -n 'C-s' if-shell "$is_special" 'send-keys C-w C-V' 'split-window -h -c "#{pane_current_path}"'
# bind-key -n 'C-x' if-shell "$is_special" 'send-keys C-w c' 'kill-pane'

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_special\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_special\" 'send-keys C-\\\\'  'select-pane -l'"
