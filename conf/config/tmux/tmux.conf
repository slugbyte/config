# NOTE: env vars EDITOR, COPYER, TOPER, and SCRATCHPAD_PATH need to be set 
# before the tmux server starts, if things are not working as expected
# kill the server (<C-t> <C-x) resource your zsh and start tmux again
#
# # EXAMPLE .zshrc|.bashrc env var setup
# export EDITOR=$(which nvim)
# export SCRATCHPAD_PATH=~/scatchpad.md
# export TOPER=$(which htop)
# if [[ $(uname) == "Darwin" ]];then
#    export COPYER=$(which pbcopy)
# else
#    # this is for X11 (not wayland)
#    export COPYER="$(which xclip) -in -selection clipboard > /dev/null'"
# fi

# unbind defaults
unbind-key -aq
unbind-key -aq -T prefix
unbind-key -aq -T copy-mode
unbind-key -aq -T copy-mode-vi

# OPTIONS
set-option -g  automatic-rename   off
set-option -g  clock-mode-style   24
set-option -g  default-terminal   "screen-256color"
set-option -g  focus-events       on
set-option -g  mode-keys          vi
set-option -g  mouse              on
set-option -g  renumber-windows   on
set-option -g  set-clipboard      on
set-option -ga terminal-overrides ',screen-256color:Tc'
set-option -sa terminal-features  ',screen-256color:RGB'
set-option -sg escape-time        10

# THEME
# - black 0
# - white 16
# - pink 197
# - purple 105
# - dark gray 234
# - medium gray 240
# - light gray 245
set-option -g status-fg                     "colour0"
set-option -g status-bg                     "colour234"
set-option -g clock-mode-colour             "colour197"
set-option -g copy-mode-current-match-style "bg=colour105,fg=colour16"
set-option -g copy-mode-match-style         "bg=colour197,fg=colour16"
set-option -g menu-selected-style           'bg=colour105,fg=colour16'
set-option -g menu-style                    'bg=colour16,fg=colour197'
set-option -g message-command-style         'bg=colour197,fg=colour16'
set-option -g message-style                 'bg=colour16,fg=colour197'
set-option -g mode-style                    'bg=colour105,fg=colour16'
set-option -g pane-active-border-style      "fg=colour245"
set-option -g pane-border-lines             "heavy"
set-option -g pane-border-style             "fg=colour197"
set-option -g pane-border-style             "fg=colour234"
set-option -g popup-border-lines            "rounded"
set-option -g status-right-style            "fg=colour240"
set-option -g window-status-current-style   'fg=colour245'
set-option -g window-status-style           'fg=colour240'

# BAHAHAHA, I can't belive I was bored enough to figure out this bonkers ass FORMAT system!
# window stats is index or if has name index:name
set-option -g window-status-format         '#{?#{==:#W,},#I,#I:#W}'
set-option -g window-status-current-format '#{?#{==:#W,},#I,#I:#W}'
# status right will show the time in 24 hour format and if there is more than one
# server session the current session name will be there too
set-option -g status-right                 ' #{?#{>:#{server_sessions},1},(#{session_name}),} #(date +"%H:%M") '
set-option -g status-left                  ' '

# [C-t] is hotkey
set-option -g prefix C-t

# Session / Server / Client
bind-key -N "<C-d> Detach Client"  C-d detach-client
bind-key -N "<C-g> Goto Client"    C-g choose-client
bind-key -N "<C-n> New Session"    C-n command-prompt "new-session -n '%1' -s '%1'"
bind-key -N "<C-r> Rename Session" C-r command-prompt "rename-session '%1'"      \; display-message "Session Name: #{session_name}"
bind-key -N "<C-q> Kill Session"   C-q kill-session
bind-key -N "<C-x> Kill Server"    C-x kill-server
bind-key -N "<C-s> Source Config"  C-s source-file    "~/.config/tmux/tmux.conf" \; display-message "Config Reloaded"

# Util
bind-key -N "[:] Command Prompt"        : command-prompt
bind-key -N "[?] Show Keybinds"         ? list-keys -N
bind-key /  list-keys                   -N
bind-key -N "[@] Show Keybinds Verbose" @ list-keys
bind-key -N "[c] Clear Pane"            c send-keys 'C-l'
bind-key -N "[#] Show Pane Numbers"     \# display-panes

# App
bind-key -N "[S] Open Scratchpad" S display-popup -E -E $EDITOR $SCRATCHPAD_PATH
bind-key -N "[H] Open Htop"       H display-popup -E -E htop

# Window
bind-key -N "[n] New Window"      n     new-window    -c "#{pane_current_path}" -n ""
bind-key -N "[o] Next Window"     o     next-window
bind-key -N "[y] Prev Window"     y     previous-window
bind-key -N "[ ] Window Cycle"    Space next-window
bind-key -N "[b] Last Window"     b     last-window
bind-key -N "[0] Select Window 0" 0     select-window -t :=0
bind-key -N "[1] Select Window 1" 1     select-window -t :=1
bind-key -N "[2] Select Window 2" 2     select-window -t :=2
bind-key -N "[3] Select Window 3" 3     select-window -t :=3
bind-key -N "[4] Select Window 4" 4     select-window -t :=4
bind-key -N "[5] Select Window 5" 5     select-window -t :=5
bind-key -N "[6] Select Window 6" 6     select-window -t :=6
bind-key -N "[7] Select Window 7" 7     select-window -t :=7
bind-key -N "[8] Select Window 8" 8     select-window -t :=8
bind-key -N "[9] Select Window 9" 9     select-window -t :=9

# Pane
bind-key -N "[r] Rename Pane"      r command-prompt "rename-window '%%'"
bind-key -N "[s] Verticle Split"   s split-window   -h -c "#{pane_current_path}"
bind-key -N "[h] Horizontal Split" h split-window   -v -c "#{pane_current_path}"
bind-key -N "[x] Close Pane"       x kill-pane

# Layout
bind-key -N "[l] Layout Cycle"               l next-layout
bind-key -N "[f] Full Screen"                f break-pane -t :
bind-key -N "[[] Swap Pane Couter Clockwise" [ swap-pane  -U
bind-key -N "[]] Swap Pane Clockwise"        ] swap-pane  -D

# Focus vim/tumx
is_app_focus="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|weechat)(diff)?$'"
bind-key -N "(y) Focus Left  (vim/tmux)" -n 'C-y' if-shell "$is_app_focus" 'send-keys C-y' 'select-pane -L'
bind-key -N "(n) Focus Down  (vim/tmux)" -n 'C-n' if-shell "$is_app_focus" 'send-keys C-n' 'select-pane -D'
bind-key -N "(e) Focus Up    (vim/tmux)" -n 'C-e' if-shell "$is_app_focus" 'send-keys C-e' 'select-pane -U'
bind-key -N "(o) Focus Right (vim/tmux)" -n 'C-o' if-shell "$is_app_focus" 'send-keys C-o' 'select-pane -R'

# Focus tmux only
bind-key -N "[←] Focus Left  (tmux)" Left  select-pane -L
bind-key -N "[↓] Focus Down  (tmux)" Down  select-pane -D
bind-key -N "[↑] Focus Up    (tmux)" Up    select-pane -U
bind-key -N "[→] Focus Right (tmux)" Right select-pane -R

# Selection
bind-key -N "[j] Join Pane To Selection" j choose-window 'join-pane -v -t "%%"'
bind-key -N "[g] Goto Pane"         g choose-tree

# RESIZE
bind-key -N "[Y] Resize Grow Left"  Y resize-pane -L 15
bind-key -N "[N] Resize Grow Down"  N resize-pane -D 15
bind-key -N "[E] Resize Grow Up"    E resize-pane -U 15
bind-key -N "[O] Resize Grow Right" O resize-pane -R 15

# [C-t p] COPY paste
bind-key -N "[p] Paste"     p paste-buffer
bind-key -N "[v] Visual Mode" v copy-mode

# choise mode
bind-key -N "[choise mode](n) next choise (down)" -T choice-mode n send-keys -X down
bind-key -N "[choise mode](e) prev choise (up)"   -T choice-mode e send-keys -X up

# copy mode util
bind-key -T copy-mode-vi q      send-keys -X cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi r      send-keys -X refresh-from-pane
bind-key -T copy-mode-vi p      paste-buffer

# copy mode copy
bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi V   send-keys -X select-line
bind-key -T copy-mode-vi k   send-keys -X copy-pipe-and-cancel $COPYER

# copy mode nav
bind-key -T copy-mode-vi y     send-keys -X cursor-left
bind-key -T copy-mode-vi n     send-keys -X cursor-down
bind-key -T copy-mode-vi e     send-keys -X cursor-up
bind-key -T copy-mode-vi o     send-keys -X cursor-right
bind-key -T copy-mode-vi Y     send-keys -X start-of-line
bind-key -T copy-mode-vi N     send-keys -X halfpage-down
bind-key -T copy-mode-vi E     send-keys -X halfpage-up
bind-key -T copy-mode-vi O     send-keys -X end-of-line
bind-key -T copy-mode-vi Up    send-keys -X cursor-up
bind-key -T copy-mode-vi Down  send-keys -X cursor-down
bind-key -T copy-mode-vi Left  send-keys -X cursor-left
bind-key -T copy-mode-vi Right send-keys -X cursor-right
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel $COPYER
bind-key -T copy-mode-vi Home  send-keys -X top-line
bind-key -T copy-mode-vi End   send-keys -X bottom-line
bind-key -T copy-mode-vi NPage send-keys -X page-down
bind-key -T copy-mode-vi PPage send-keys -X page-up

# copy mode more unruly
bind-key -T copy-mode-vi w  send-keys      -X next-word
bind-key -T copy-mode-vi W  send-keys      -X previous-word
bind-key -T copy-mode-vi t  command-prompt -1 -p "(jump forward)"  { send-keys -X jump-forward  "%%" }
bind-key -T copy-mode-vi T  command-prompt -1 -p "(jump backward)" { send-keys -X jump-backward "%%" }
bind-key -T copy-mode-vi h  send-keys      -X jump-again
bind-key -T copy-mode-vi H  send-keys      -X jump-reverse
bind-key -T copy-mode-vi b  send-keys      -X next-matching-bracket
bind-key -T copy-mode-vi \{ send-keys      -X previous-paragraph
bind-key -T copy-mode-vi \} send-keys      -X next-paragraph

# copy mode search
bind-key -T copy-mode-vi ? command-prompt -T search -p "(search up)"   { send-keys -X search-backward "%%" }
bind-key -T copy-mode-vi / command-prompt -T search -p "(search down)" { send-keys -X search-forward  "%%" }
bind-key -T copy-mode-vi f send-keys      -X search-again
bind-key -T copy-mode-vi F send-keys      -X search-reverse

# copy mode mouse
bind-key -T copy-mode-vi MouseDown1Pane    select-pane
bind-key -T copy-mode-vi MouseDrag1Pane    select-pane \; send-keys            -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys   -X copy-pipe-and-cancel $COPYER
bind-key -T copy-mode-vi WheelUpPane       select-pane \; send-keys            -X -N          5  scroll-up
bind-key -T copy-mode-vi WheelDownPane     select-pane \; send-keys            -X -N          5  scroll-down
bind-key -T copy-mode-vi DoubleClick1Pane  select-pane \; send-keys            -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi TripleClick1Pane  select-pane \; send-keys            -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
