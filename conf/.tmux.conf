# ___ TMUX HOTKEY ______________________________________
# set ^f to be the new cmd hotkey
unbind C-b
set -g prefix C-f

# ___ MOUSE ______________________________________
# set mouse mode on by default
set-option -g mouse on

# bind <C-f> m turn mouse mode on 
bind m \
	set-option -g mouse on \;\
	display 'Mouse: ON'

# bind <C-f> M turn mouse mode off
bind M \
	set-option -g mouse off \;\
	display 'Mouse: OFF'

# ___ NAVIGATION ______________________________________

# prev and next window bindings
bind-key -n C-n next-window
bind-key -n C-b previous-window

# move pane to window
unbind k
bind-key s choose-window 'join-pane -v -s "%%"'
bind-key d choose-window 'join-pane -v -t "%%"'

# create window from pane
unbind f
bind-key f break-pane -t :

# remap rotate window to <C-f> i
unbind C-o
unbind i
bind-key i rotate-window

# remain at CWD
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#bind o previos pane p next pane
bind-key -n ˙ swap-pane -D

bind-key -n ¬ swap-pane -U

# map vim nav keys CAPS to resize panes
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10
bind-key K resize-pane -U 10
bind-key J resize-pane -D 10
unbind h
unbind j
unbind k 
unbind l

# ___ COPY ______________________________________
set-window-option -g mode-keys vi
bind-key p paste-buffer                # paste; default ]
bind-key o copy-mode                   # enter copy mode; default [
#bind-key -t vi-copy v begin-selection  # begin visual mode
#bind-key -t vi-copy V select-line      # visual line
#bind-key -t vi-copy r rectangle-toggle # visual block toggle

# ___ VIM ______________________________________
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R


# ___ DISPLAY ______________________________________
set -g default-terminal "screen-256color"
#set -g message-bg colour6
#set -g mode-bg colour15
set-option -g status-bg colour234
set-option -g status-fg colour0
#set -g pane-active-border-fg colour39
#set -g pane-border-fg colour15
set -g window-status-format  '#I'
set -g window-status-style 'fg=colour245'
set -g window-status-current-format  ' (#I) '
set -g window-status-current-style 'bg=colour16,fg=colour15,bold'
set -g status-left ' ' 
set -g status-right '#h #[bg=#4e4e4e]#[fg=#ffffff]#(date +" %H:%M ")'

# ___ MISC ______________________________________

# TAB BE FREEKIN
unbind -n Tab

# bind r to reload source file
bind r source-file ~/.tmux.conf

# bind prefix ctrl-o to clear screen
bind l clear
bind -n C-o send-keys 'C-l'

if-shell -b '[ $(uname -s) = "Darwin" ]' \
  'set -g default-command "reattach-to-user-namespace -l /bin/bash"' \
  'set -g default-command "/bin/bash"'

if-shell -b '[ $(hostname) = "kalibox" ]' 'set-option -g status-bg colour197'
if-shell -b '[ $(hostname) = "archbox" ]' 'set-option -g status-bg colour105'
if-shell -b '[ $(hostname) = "archbox" ]' 'set -g status-right "#[bg=#4e4e4e]#[fg=#ffffff] happy hackin "'
